@using ShopTask.Application.Models;
@using ShopTask.Resources;
@using ShopTask.Resources.Shared;
@using System.Globalization;
@using ShopTask.Utils;

@helper AddActivePageClassByAction(string action, string controller)
{
    if (action == ViewContext.RouteData.GetRequiredString("action") && (controller == ViewContext.RouteData.GetRequiredString("controller")))
    {
        @:active-page-link
    }
}

@helper AddActivePageClassByUrl(string url)
{
    if (url == Request.Url.AbsolutePath)
    {
        @:active-page-link
    }
}

@{
    CategoryModel[] categories = ViewBag.Categories;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/Site.css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <script type="text/javascript">
        var apiRootUrl = '@HttpContext.Current.Request.ApplicationPath';
    </script>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/scripts/libs/jquery.unobtrusive-ajax.js")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/index")

    <div class="navbar">
        <div class="navbar-body">
            <a href="\shoptask\Inventory\Product" class="navbar-link @AddActivePageClassByUrl("/shoptask/Inventory/Product")">@Res.CreateProductTitle</a>
            <div class="inventory-link">
                <a href="\shoptask\Inventory" class="navbar-link @AddActivePageClassByUrl("/shoptask/Inventory")">@Res.ProductsTitle</a>
                @if (categories.Any())
                {
                    <ul class="categories-filter">
                        @foreach (var category in categories)
                        {
                            <li class="category-filter-link"><a href="\shoptask\Inventory?filterCategoryId=@category.Id">@category.Name</a></li>
                        }
                    </ul>
                }
            </div>
            <a href="@Url.Action("Index", new { area = "", controller = "Order" })" class="navbar-link @AddActivePageClassByAction("Index", "Order")">@Res.OrdersTitle</a>
            <a href="@Url.Action("Index", new { area = "Inventory", controller= "Categories"})" class="navbar-link @AddActivePageClassByAction("Index", "Categories")">@Res.CategoriesTitle</a>

            <select class="js-culture-select" data-change-culture-url="@Url.Action("ChangeCulture", new { area = "", controller = "Base" })">
                <option disabled selected>@Res.DefaultCultureSelect</option>
                @foreach (var culture in LocalizationConfig.SupportedCultures)
                {
                    <option value="@culture">@CulturesTitlesRes.ResourceManager.GetString(culture)</option>
                }
            </select>

        </div>
    </div>

    <div>
        @RenderBody()
    </div>
    @RenderSection("scripts", required: false)
</body>
</html>
